# import logging so we can write messages to the logimport logging# import the class DbHandler to interact with the databaseimport db_handlerclass request():    def __init__(self):        logging.info('Initializing request')        self.req_DbHandler=db_handler.DbHandler()        self.req_status = ""        self.req_id = ""        self.req_dog_id = ""        self.req_creation_time = ""        self.req_respond_time = ""        self.req_email_service_provider = ""        self.req_day = ""        self.req_part_of_day = ""    def insertToDb(self):        # Inserting the object of owner to the DB        self.req_DbHandler.connectToDb()        cursor = self.req_DbHandler.getCursor()        # self.req_id = cursor.lastrowid        sql = """INSERT INTO Request(ID,Av_Day,Av_Part_Of_Day,Email,S_P_Answer,Request_Date,Date_Of_Answer) VALUES(%s,%s,%s,%s,%s,%s,%s)"""        cursor.execute(sql, (self.req_dog_id, self.req_day, self.req_part_of_day, self.req_email_service_provider, self.req_status, self.req_creation_time, self.req_respond_time ))        self.req_DbHandler.commit()        self.req_DbHandler.disconnectFromDb()        return    def insert_status(self):        # Inserting the object of owner to the DB        self.req_DbHandler.connectToDb()        cursor = self.req_DbHandler.getCursor()        sql = """UPDATE Request         Set S_P_Answer = "%s" ,Date_Of_Answer="%s"          Where Request_ID="%s" """        cursor.execute(sql, (self.req_status,self.req_respond_time,self.req_id))        self.req_DbHandler.commit()        self.req_DbHandler.disconnectFromDb()        return